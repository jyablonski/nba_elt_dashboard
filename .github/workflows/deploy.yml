name: Prod Deploy - ECR

on:
  push:
    branches:
      - master

env:
  IAM_ROLE: ${{ secrets.IAM_ROLE_ECR }}
  AWS_REGION : "us-east-1"
  ECR_REPO : ${{ secrets.ECR_REPO }}
  IAM_ROLE_SESSION: "nba-elt-dashboard-cd"
  IMAGE_NAME: "nba_elt_dashboard"
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}

# permission can be added at job level or workflow level    
permissions:
      id-token: write
      contents: read    # This is required for actions/checkout

jobs:
  build_image:
    name: Deploy Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ env.IAM_ROLE }}            # use full arn
        role-session-name: ${{ env.IAM_ROLE_SESSION }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY:  ${{ env.ECR_REPO }}
        IMAGE_TAG: ${{ env.IMAGE_NAME }}
      run: |
        docker-compose -f docker/docker-compose-build.yml build
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Cycle ECS Service
      env:
        ECS_CLUSTER: $ {{ env.ECS_CLUSTER }}
        ECS_SERVICE: $ {{ env.ECS_SERVICE }}
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
