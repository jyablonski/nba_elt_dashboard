name: Prod Deploy - ECR

on:
  push:
    branches:
      - master

env:
  IAM_ROLE: ${{ secrets.IAM_ROLE_ECR }}
  AWS_REGION: "us-east-1"
  ECR_REPO: ${{ secrets.ECR_REPO }}
  IAM_ROLE_SESSION: "nba-elt-dashboard-cd"
  IMAGE_NAME: "nba_elt_dashboard"
  AWS_ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  AWS_ECS_SERVICE: ${{ secrets.ECS_SERVICE }}

permissions:
  id-token: write
  contents: read

jobs:
  build_image:
    name: Deploy Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          role-session-name: ${{ env.IAM_ROLE_SESSION }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPO }}
          IMAGE_TAG: ${{ env.IMAGE_NAME }}
        run: |
          docker-compose -f docker/docker-compose-build.yml build
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Cycle ECS Service
        env:
          ECS_CLUSTER: $ {{ env.AWS_ECS_CLUSTER }}
          ECS_SERVICE: $ {{ env.AWS_ECS_SERVICE }}
        run: |
          task_list=$(aws ecs list-tasks --cluster $ECS_CLUSTER --service-name $ECS_SERVICE)
          first_task=$(echo "$task_list" | jq -r '.taskArns[0]')
          aws ecs stop-task --cluster $ECS_CLUSTER --task $first_task